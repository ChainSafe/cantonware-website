name: Build and Deploy to IPFS

permissions:
  contents: read
  pull-requests: write
  statuses: write

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to IPFS
        uses: ChainSafe/ipfs-deploy-action@v0.0.2
        id: deploy
        with:
          path-to-deploy: dist
          storacha-key: ${{ secrets.STORACHA_KEY }}
          storacha-proof: ${{ secrets.STORACHA_PROOF }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update DNSLink
        uses: ipshipyard/dnslink-action@v1
        if: github.ref == 'refs/heads/main' # only update the DNSLink on the main branch
        with:
          cid: ${{ steps.deploy.outputs.cid }}
          dnslink_domain: cantonware.xyz
          cf_record_id: ${{ secrets.CLOUDFLARE_RECORD_ID }}
          cf_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          cf_auth_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "âœ… Deployment to IPFS complete"
          echo "CID: ${{ steps.storacha.outputs.cid }}"
          echo "IPFS Gateway URL: https://ipfs.orbitor.dev/ipfs/${{ steps.storacha.outputs.cid }}"
          echo "Live page: https://cantonware.xyz"
